# Default values for couchbase-cluster.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# couchbaseCluster config
couchbaseCluster:
  # create flag to deploy couchbase cluster
  create: true
  # name of the cluster. defaults to name of chart release
  name: "seal"
  # username of the cluster admin.
  username: "admin"
  # password of the cluster admin.
  password: "curacloud"
  # authSecretOverride is name of secret to use instead of using
  # the default secret with username and password specified above
  authSecretOverride: ""
  # BaseImage is the base couchbase image name that will be used to launch
  # couchbase clusters. This is useful for private registries, etc.
  baseImage: "couchbase/server"
  # Version is the expected version of the couchbase cluster
  version: "enterprise-6.0.1"
  # Option to expose admin console
  exposeAdminConsole: true
  # Option to expose admin console
  # Specific services to use when exposing ui
  exposedFeatures:
    - admin
    #- xdcr
    # - client
  # Defines how the admin console service is exposed.
  # Allowed values are NodePort and LoadBalancer.
  # If this field is LoadBalancer then you must also define a spec.dns.domain.
  adminConsoleServiceType: NodePort
  # Defines how the per Couchbase node ports are exposed.
  # Allowed values are NodePort and LoadBalancer.
  # If this field is LoadBalancer then you must also define a spec.dns.domain.
  exposedFeatureServiceType: NodePort
  # The retention period that log volumes are kept for after their associated pods have been deleted.
  logRetentionTime: 604800s
  # The maximum number of log volumes that can be kept after their associated pods have been deleted.
  logRetentionCount: 20
  # Uncomment these 2 lines for specifying the dynamic DNS configuration to use when exposing services
  disableBucketManagement: true
  #dns:
  # domain:  example.domain.com
  # Indicates which underlying cloud platform the Kubernetes cluster is running.
  # The Value must be one of aws, gce or azure
  platform:
  # Cluster wide settings for nodes and services
  cluster:
    # The amount of memory that should be allocated to the data service
    dataServiceMemoryQuota: 4096
    # The amount of memory that should be allocated to the index service
    indexServiceMemoryQuota: 1024
    # The amount of memory that should be allocated to the search service
    searchServiceMemoryQuota: 256
    # The amount of memory that should be allocated to the eventing service
    eventingServiceMemoryQuota: 256
    # The amount of memory that should be allocated to the analytics service
    analyticsServiceMemoryQuota: 1024
    # The index storage mode to use for secondary indexing
    indexStorageSetting: memory_optimized
    # Timeout that expires to trigger the auto failover.
    autoFailoverTimeout: 120
    # The number of failover events we can tolerate
    autoFailoverMaxCount: 3
    # Whether to auto failover if disk issues are detected
    autoFailoverOnDataDiskIssues: true
    # How long to wait for transient errors before failing over a faulty disk
    autoFailoverOnDataDiskIssuesTimePeriod: 120
    # Whether to enable failing over a server group
    autoFailoverServerGroup: false
  servers:
    - name: data_services
      size: 3
      services:
        - data
      serverGroups:
        - us-east-1a
      # Pod defines the policy to create pod for the couchbase pod.
      pod:
        volumeMounts:
          default: couchbase
        nodeSelector:
          databases: "couchbase"
    - name: index_services
       # Size of the couchbase cluster.
      size: 2
      # The services to run on nodes
      services:
        - index
      # ServerGroups define the set of availability zones we want to distribute pods over.
      serverGroups:
        - us-east-1a
      # Pod defines the policy to create pod for the couchbase pod.
      pod:
        volumeMounts:
          default: couchbase
        nodeSelector:
          databases: "couchbase"
    - name: search_services
       # Size of the couchbase cluster.
      size: 1
      # The services to run on nodes
      services:
        - search
      # ServerGroups define the set of availability zones we want to distribute pods over.
      serverGroups:
        - us-east-1a
      # Pod defines the policy to create pod for the couchbase pod.
      pod:
        volumeMounts:
          default: couchbase
        nodeSelector:
          databases: "couchbase"
    - name: eventing_services
       # Size of the couchbase cluster.
      size: 1
      # The services to run on nodes
      services:
        - eventing
      # ServerGroups define the set of availability zones we want to distribute pods over.
      serverGroups:
        - us-east-1a
      # Pod defines the policy to create pod for the couchbase pod.
      pod:
        volumeMounts:
          default: couchbase
        nodeSelector:
          databases: "couchbase"
    - name: analytics_services
       # Size of the couchbase cluster.
      size: 1
      # The services to run on nodes
      services:
        - analytics
      # ServerGroups define the set of availability zones we want to distribute pods over.
      serverGroups:
        - us-east-1a
      # Pod defines the policy to create pod for the couchbase pod.
      pod:
        volumeMounts:
          default: couchbase
        nodeSelector:
          databases: "couchbase"
    - name: query_services
       # Size of the couchbase cluster.
      size: 2
      # The services to run on nodes
      services:
        - query
      # ServerGroups define the set of availability zones we want to distribute pods over.
      serverGroups:
        - us-east-1a
      # Pod defines the policy to create pod for the couchbase pod.
      pod:
        volumeMounts:
          default: couchbase
        nodeSelector:
          databases: "couchbase"
  # Security Context for all pods
  securityContext: {}
  # VolumeClaimTemplates define the desired characteristics of a volume
  # that can be requested and claimed by a pod.
  volumeClaimTemplates:
    - metadata:
        name: couchbase
      spec:
        storageClassName: "nfs-storage"
        resources:
          requests:
            storage: 30Gi

# couchbaseTLS can be used to override the Certs that will be used
# to sign the keys used by the nodes.
couchbaseTLS:
  # disable if manually creating certs
  # provide cert and key via --set-file
  create: false
  # A base64 encoded PEM format certificate for the CA
  cert:
  # A base64 encoded PEM format private key for the CA
  key:
  # Expiry time of CA in days for generated certs
  expiration: 365
  # OperatorSecret is the secret containing TLS certs used by operator
  operatorSecret:
    name: ""
    # PEM format certificate for operator (auto-generated)
    # override via --set-file
    cert:
    # PEM format private key for operator (auto-generated)
    # override via --set-file
    key: